cmake_minimum_required(VERSION 3.0.0)
project(learn-programming VERSION 0.1.0 LANGUAGES C)

include(CTest)
enable_testing()



FUNCTION(BUILDSOURCE directory)
  FILE(GLOB children ${directory}/*)
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${child})
      GET_FILENAME_COMPONENT(source_name ${child} NAME_WE)
      STRING(REGEX MATCHALL "[a-zA-Z]+\ |[a-zA-Z]+$" subdirectory "${directory}")
      IF("${source_name}" STREQUAL "course")
        FILE(GLOB subchildren ${child}/*)
        FOREACH(subchild ${subchildren})
          IF(IS_DIRECTORY ${subchild})
            GET_FILENAME_COMPONENT(source_name ${subchild} NAME_WE)
            SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/${subdirectory}/course/${source_name})
            SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/${subdirectory}/course/${source_name})
            SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/${subdirectory}/course/${source_name})
            ADD_EXECUTABLE(${source_name} "${subchild}/main.c")
          ENDIF()
        ENDFOREACH()
      ELSE()
        SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/${subdirectory}/${source_name})
        SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib/${subdirectory}/${source_name})
        SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/${subdirectory}/${source_name})
        ADD_EXECUTABLE(${source_name} "${child}/main.c")
      ENDIF()
    ENDIF()
  ENDFOREACH()
ENDFUNCTION()
BUILDSOURCE("src/c/hackerrank")
BUILDSOURCE("src/c/leetcode")

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
