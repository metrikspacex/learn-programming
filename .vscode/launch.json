{
  "configurations": [
    {
      "type": "java",
      "name": "Solution",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "unique_morse_code_words"
    },
    {
      "type": "java",
      "name": "Current File",
      "request": "launch",
      "mainClass": "${file}"
    },
    {
      "type": "java",
      "name": "Solution",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "add_two_integers"
    },
    {
      "type": "java",
      "name": "Solution(1)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "arithmetic_subarrays"
    },
    {
      "type": "java",
      "name": "Solution(2)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "binary_search_tree_to_greater_sum_tree"
    },
    {
      "type": "java",
      "name": "Solution(3)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "binary_tree_postorder_traversal"
    },
    {
      "type": "java",
      "name": "Solution(4)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "binary_tree_preorder_traversal"
    },
    {
      "type": "java",
      "name": "Solution(5)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "cells_with_odd_values_in_a_matrix"
    },
    {
      "type": "java",
      "name": "Solution(6)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "count_equal_and_divisible_pairs_in_an_array"
    },
    {
      "type": "java",
      "name": "Solution(7)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "count_good_triplets"
    },
    {
      "type": "java",
      "name": "Solution(8)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "count_number_of_pairs_with_absolute_difference_k"
    },
    {
      "type": "java",
      "name": "Solution(9)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "create_target_array_in_the_given_order"
    },
    {
      "type": "java",
      "name": "Solution(10)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "decrypt_string_from_alphabet_to_integer_mapping"
    },
    {
      "type": "java",
      "name": "Solution(11)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "deepest_leaves_sum"
    },
    {
      "type": "java",
      "name": "Solution(12)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "delete_greatest_value_in_each_row"
    },
    {
      "type": "java",
      "name": "OrderedStream",
      "request": "launch",
      "mainClass": "OrderedStream",
      "projectName": "design_an_ordered_stream"
    },
    {
      "type": "java",
      "name": "ParkingSystem",
      "request": "launch",
      "mainClass": "ParkingSystem",
      "projectName": "design_parking_system"
    },
    {
      "type": "java",
      "name": "Solution(13)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "determine_color_of_a_chessboard_square"
    },
    {
      "type": "java",
      "name": "Solution(14)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "determine_if_string_halves_are_alike"
    },
    {
      "type": "java",
      "name": "Solution(15)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "di_string_match"
    },
    {
      "type": "java",
      "name": "Solution(16)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "evaluate_boolean_binary_tree"
    },
    {
      "type": "java",
      "name": "Solution(17)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "find_first_palindromic_string_in_the_array"
    },
    {
      "type": "java",
      "name": "Solution(18)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "find_the_difference_of_two_arrays"
    },
    {
      "type": "java",
      "name": "Solution(19)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "find_the_highest_altitude"
    },
    {
      "type": "java",
      "name": "Solution(20)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "find_the_pivot_integer"
    },
    {
      "type": "java",
      "name": "Solution(21)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "group_anagrams"
    },
    {
      "type": "java",
      "name": "Solution(22)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "house_robber"
    },
    {
      "type": "java",
      "name": "Solution(23)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "increasing_order_search_tree"
    },
    {
      "type": "java",
      "name": "Solution(24)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "is_subsequence"
    },
    {
      "type": "java",
      "name": "Solution(25)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "largest_local_values_in_a_matrix"
    },
    {
      "type": "java",
      "name": "Solution(26)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "length_of_last_word"
    },
    {
      "type": "java",
      "name": "Solution(27)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "lexicographically_smallest_palindrome"
    },
    {
      "type": "java",
      "name": "Solution(28)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "longest_common_prefix"
    },
    {
      "type": "java",
      "name": "Solution(29)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "max_increase_to_keep_city_skyline"
    },
    {
      "type": "java",
      "name": "Solution(30)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "maximum_69_number"
    },
    {
      "type": "java",
      "name": "Solution(31)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "maximum_nesting_depth_of_the_parentheses"
    },
    {
      "type": "java",
      "name": "Solution(32)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "maximum_product_of_two_elements_in_an_array"
    },
    {
      "type": "java",
      "name": "Solution(33)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "maximum_subarray"
    },
    {
      "type": "java",
      "name": "Solution(34)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "maximum_sum_with_exactly_k_elements"
    },
    {
      "type": "java",
      "name": "Solution(35)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "merge_nodes_in_between_zeros"
    },
    {
      "type": "java",
      "name": "Solution(36)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "merge_two_binary_trees"
    },
    {
      "type": "java",
      "name": "Solution(37)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "minimum_bit_flips_to_convert_number"
    },
    {
      "type": "java",
      "name": "Solution(38)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "minimum_number_of_moves_to_seat_everyone"
    },
    {
      "type": "java",
      "name": "Solution(39)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "minimum_operations_to_make_the_array_increasing"
    },
    {
      "type": "java",
      "name": "Solution(40)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "minimum_time_visiting_all_points"
    },
    {
      "type": "java",
      "name": "Solution(41)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "neither_minimum_nor_maximum"
    },
    {
      "type": "java",
      "name": "Solution(42)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "number_of_arithmetic_triplets"
    },
    {
      "type": "java",
      "name": "Solution(43)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "number_of_common_factors"
    },
    {
      "type": "java",
      "name": "Solution(44)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "number_of_rectangles_that_can_form_the_largest_square"
    },
    {
      "type": "java",
      "name": "Solution(45)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "number_of_steps_to_reduce_a_number_to_zero"
    },
    {
      "type": "java",
      "name": "Solution(46)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "number_of_strings_that_appear_as_substrings_in_word"
    },
    {
      "type": "java",
      "name": "Solution(47)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "partitioning_into_minimum_number_of_deci_binary_numbers"
    },
    {
      "type": "java",
      "name": "Solution(48)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "product_of_array_except_self"
    },
    {
      "type": "java",
      "name": "Solution(49)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "queries_on_number_of_points_inside_a_circle"
    },
    {
      "type": "java",
      "name": "Solution(50)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "remove_trailing_zeros_from_a_string"
    },
    {
      "type": "java",
      "name": "Solution(51)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "replace_all_digits_with_characters"
    },
    {
      "type": "java",
      "name": "Solution(52)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "replace_elements_with_greatest_element_on_right_side"
    },
    {
      "type": "java",
      "name": "Solution(53)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "reverse_prefix_of_word"
    },
    {
      "type": "java",
      "name": "Solution(54)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "reverse_words_in_a_string_iii"
    },
    {
      "type": "java",
      "name": "Solution(55)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "search_in_a_binary_search_tree"
    },
    {
      "type": "java",
      "name": "Solution(56)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "self_dividing_numbers"
    },
    {
      "type": "java",
      "name": "Solution(57)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "separate_the_digits_in_an_array"
    },
    {
      "type": "java",
      "name": "Solution(58)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sort_the_people"
    },
    {
      "type": "java",
      "name": "Solution(59)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sorting_the_sentence"
    },
    {
      "type": "java",
      "name": "Solution(60)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "split_a_string_in_balanced_strings"
    },
    {
      "type": "java",
      "name": "Solution(61)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "strictly_palindromic_number"
    },
    {
      "type": "java",
      "name": "SubrectangleQueries",
      "request": "launch",
      "mainClass": "SubrectangleQueries",
      "projectName": "subrectangle_queries"
    },
    {
      "type": "java",
      "name": "Solution(62)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sum_of_all_odd_length_subarrays"
    },
    {
      "type": "java",
      "name": "Solution(63)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sum_of_all_subset_xor_totals"
    },
    {
      "type": "java",
      "name": "Solution(64)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sum_of_nodes_with_even_valued_grandparent"
    },
    {
      "type": "java",
      "name": "Solution(65)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "sum_of_squares_of_special_elements"
    },
    {
      "type": "java",
      "name": "Solution(66)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "teemo_attacking"
    },
    {
      "type": "java",
      "name": "Solution(67)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "to_lower_case"
    },
    {
      "type": "java",
      "name": "Solution(68)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "truncate_sentence"
    },
    {
      "type": "java",
      "name": "Solution(69)",
      "request": "launch",
      "mainClass": "Solution",
      "projectName": "two_sum"
    },
    {
      "type": "java",
      "name": "Main",
      "request": "launch",
      "mainClass": "Main",
      "projectName": "weekone"
    }
  ],
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0"
}
